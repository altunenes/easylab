{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"EasyLab Offers simple solutions with GUI. From a folder, it can resize images, change their extensions, applies spatial frequencies, and remove backgrounds... Purpose of the project The purpose of the project is to offer simple solutions to solve some of the problems that arise when working with big image datasets. The project is a work in progress, and it is not finished yet. Since it offers GUI, it is very practical to use it. Features Resize images Change extension Apply spatial frequencies (low pass, high pass with Butterworth filter) Apply Gaussian blur Apply grayscale filter (RGB to Gray) Rename images (with a desired prefix) Remove background from images (Utilizes deep learning, so it is slow depending on the size of the images) Apply Histogram Equalization Apply CFA (Color Filter Array) filter installation Install easylab with pip: pip install easylab Usage it is very simple to use the project. For the open GUI, use the following command: from easylab import easylab then open the gui with: easylab.easylabgui() This basically starts the GUI. First, select the input folder then select the output folder. Then just select the options you want to apply to the images. Rename images will change all image names from the input folder with the input prefix. Don't forget to add an extension if you use rename option. Javascript I will also add some javascript to the online version. You can find js demos on the easylab website here E-prime scripts get the trail list (Image names for the E-Prime) or create a jitter: https://altunenes.github.io/EasyLab/filenames Contributing Contributions are welcome! Enes Altun Main Author Current look","title":"Home"},{"location":"#easylab","text":"Offers simple solutions with GUI. From a folder, it can resize images, change their extensions, applies spatial frequencies, and remove backgrounds...","title":"EasyLab"},{"location":"#purpose-of-the-project","text":"The purpose of the project is to offer simple solutions to solve some of the problems that arise when working with big image datasets. The project is a work in progress, and it is not finished yet. Since it offers GUI, it is very practical to use it.","title":"Purpose of the project"},{"location":"#features","text":"Resize images Change extension Apply spatial frequencies (low pass, high pass with Butterworth filter) Apply Gaussian blur Apply grayscale filter (RGB to Gray) Rename images (with a desired prefix) Remove background from images (Utilizes deep learning, so it is slow depending on the size of the images) Apply Histogram Equalization Apply CFA (Color Filter Array) filter","title":"Features"},{"location":"#installation","text":"Install easylab with pip: pip install easylab","title":"installation"},{"location":"#usage","text":"it is very simple to use the project. For the open GUI, use the following command: from easylab import easylab then open the gui with: easylab.easylabgui() This basically starts the GUI. First, select the input folder then select the output folder. Then just select the options you want to apply to the images. Rename images will change all image names from the input folder with the input prefix. Don't forget to add an extension if you use rename option.","title":"Usage"},{"location":"#javascript","text":"I will also add some javascript to the online version. You can find js demos on the easylab website here","title":"Javascript"},{"location":"#e-prime-scripts","text":"get the trail list (Image names for the E-Prime) or create a jitter: https://altunenes.github.io/EasyLab/filenames","title":"E-prime scripts"},{"location":"#contributing","text":"Contributions are welcome! Enes Altun Main Author","title":"Contributing"},{"location":"#current-look","text":"","title":"Current look"},{"location":"api_reference/","text":"API REFERENCE This page gives an overview of the functions. Modules needed to run the GUI python 3.6 or higher psychopy numpy opencv-python matplotlib tkinter rembg Functions + browseFiles + outputfile + resize + rename + blur + change_extension + Histogram equalization + gray + lowfrequencydomain + highfrequencybandfilter + remove_background + cfa + exit + easylabgui browseFiles browseFiles is a function that opens a file browser and lets you select a folder. outputfile outputfile is a function that opens a file browser and lets you select a folder for the exportin after processing. resize resize is a function that resizes all images in the folder to the desired size. rename rename is a function that renames all images in the folder with desired prefix. Don't forget to add extension if you use rename option. If you starts with a number, it will be added to the end of the name. For example, if you use 1 as prefix, the image name will be 1_1.jpg, 1_2.jpg, 1_3.jpg, etc. blur blur is a function that applies gaussian blur to all images in the folder with the given sigma and kernel size. Sigma is the standard deviation of the gaussian kernel. Kernel size is the size of the kernel. It should be odd. For example, 3, 5, 7, etc. change_extension change_extension is a function that changes all images' extensions to the desired extension. gray gray is a function that converts all images to GRAY. Histogram equalization Histogram equalization is a function that applies histogram equalization to all images in the folder. It is a method in which the image is transformed so that the intensity distribution is uniform. This method is useful to improve the contrast of images, especially when the usable data of the image is represented by close contrast values. Function uses cv2.equalizeHist(). lowfrequencydomain lowfrequencydomain is a function that applies low frequency filter to all images in the folder with the given cutoff frequency. the function is based on the PsychoPy: Psychopy . You can adjust RMS, cutoff frequency, and order of the filter. Warning : Matplotlib doesn't work with pixels directly, but rather physical sizes and DPI. If you want to display a figure with certain pixel size, you need to know the DPI of your monitor. I added two labels; just enter your desired dimensions (it will be multiplied with 1000; for example, if you want 800x800 pixels enter the 0.8 for both labels). highfrequencybandfilter highfrequencybandfilter is a function that applies high frequency filter to all images in the folder with the given cutoff frequency. the function is based on the PsychoPy: Psychopy . You can adjust RMS, cutoff frequency, and order of the filter. remove_background remove_background is a function that removes the background from all images in the folder. It is based on the rembg package: rembg cfa cfa is a function that converts all images to CFA which stands for Color Filter Array or color filter mosaic. It is a method of color filter array photography. There are 4 types of CFA. exit exit is a function that exits the program. easylabgui easylabgui is a function that starts the easylab.","title":"API"},{"location":"api_reference/#api-reference","text":"This page gives an overview of the functions.","title":"API REFERENCE"},{"location":"api_reference/#modules-needed-to-run-the-gui","text":"python 3.6 or higher psychopy numpy opencv-python matplotlib tkinter rembg","title":"Modules needed to run the GUI"},{"location":"api_reference/#functions","text":"+ browseFiles + outputfile + resize + rename + blur + change_extension + Histogram equalization + gray + lowfrequencydomain + highfrequencybandfilter + remove_background + cfa + exit + easylabgui browseFiles browseFiles is a function that opens a file browser and lets you select a folder. outputfile outputfile is a function that opens a file browser and lets you select a folder for the exportin after processing. resize resize is a function that resizes all images in the folder to the desired size. rename rename is a function that renames all images in the folder with desired prefix. Don't forget to add extension if you use rename option. If you starts with a number, it will be added to the end of the name. For example, if you use 1 as prefix, the image name will be 1_1.jpg, 1_2.jpg, 1_3.jpg, etc. blur blur is a function that applies gaussian blur to all images in the folder with the given sigma and kernel size. Sigma is the standard deviation of the gaussian kernel. Kernel size is the size of the kernel. It should be odd. For example, 3, 5, 7, etc. change_extension change_extension is a function that changes all images' extensions to the desired extension. gray gray is a function that converts all images to GRAY. Histogram equalization Histogram equalization is a function that applies histogram equalization to all images in the folder. It is a method in which the image is transformed so that the intensity distribution is uniform. This method is useful to improve the contrast of images, especially when the usable data of the image is represented by close contrast values. Function uses cv2.equalizeHist(). lowfrequencydomain lowfrequencydomain is a function that applies low frequency filter to all images in the folder with the given cutoff frequency. the function is based on the PsychoPy: Psychopy . You can adjust RMS, cutoff frequency, and order of the filter. Warning : Matplotlib doesn't work with pixels directly, but rather physical sizes and DPI. If you want to display a figure with certain pixel size, you need to know the DPI of your monitor. I added two labels; just enter your desired dimensions (it will be multiplied with 1000; for example, if you want 800x800 pixels enter the 0.8 for both labels). highfrequencybandfilter highfrequencybandfilter is a function that applies high frequency filter to all images in the folder with the given cutoff frequency. the function is based on the PsychoPy: Psychopy . You can adjust RMS, cutoff frequency, and order of the filter. remove_background remove_background is a function that removes the background from all images in the folder. It is based on the rembg package: rembg cfa cfa is a function that converts all images to CFA which stands for Color Filter Array or color filter mosaic. It is a method of color filter array photography. There are 4 types of CFA. exit exit is a function that exits the program. easylabgui easylabgui is a function that starts the easylab.","title":"Functions"},{"location":"userguide/","text":"installation Install easylab with pip: pip install easylab Usage easylab provides a GUI, so you don't need to write any code. Just open the gui with: first import the easylab module: from easylab import easylab then open the gui with following command: easyLab.easylabgui() I also provide a online demo for the getting image names from the folder with Javascript. You can find it here: https://altunenes.github.io/easylab/filenames It also contains a jitter list generator for further processing. It is useful for some experiments to avoid problems with the constant durations. Other Scripts Easylab will be updated as solutions come to the problems encountered in the laboratory. These problems are mostly related to stimulant preparation and E-Prime. So some solutions probably only basic scripts and they will not add to the GUI. List of other Scripts: Filelistfromfolder.py : Generates a list of filenames from a folder. You can find the information on the script. By the way, online demo that written in javascript do same thing. e_prime_bullshit.py : A strange problem with E-Prime. Sometimes, e-prime doesn't read the images ( We still don't know why). This basic script will fix the whole process. requirements Python 3.6 or higher Tkinter (for GUI) psychopy (for the butterworth filter) opencv (for the filters, image processing) numpy (for the mathematical operations) matplotlib (for the image visualization) rembg (for the background removal)","title":"User Guide"},{"location":"userguide/#installation","text":"Install easylab with pip: pip install easylab","title":"installation"},{"location":"userguide/#usage","text":"easylab provides a GUI, so you don't need to write any code. Just open the gui with: first import the easylab module: from easylab import easylab then open the gui with following command: easyLab.easylabgui() I also provide a online demo for the getting image names from the folder with Javascript. You can find it here: https://altunenes.github.io/easylab/filenames It also contains a jitter list generator for further processing. It is useful for some experiments to avoid problems with the constant durations.","title":"Usage"},{"location":"userguide/#other-scripts","text":"Easylab will be updated as solutions come to the problems encountered in the laboratory. These problems are mostly related to stimulant preparation and E-Prime. So some solutions probably only basic scripts and they will not add to the GUI. List of other Scripts: Filelistfromfolder.py : Generates a list of filenames from a folder. You can find the information on the script. By the way, online demo that written in javascript do same thing. e_prime_bullshit.py : A strange problem with E-Prime. Sometimes, e-prime doesn't read the images ( We still don't know why). This basic script will fix the whole process.","title":"Other Scripts"},{"location":"userguide/#requirements","text":"Python 3.6 or higher Tkinter (for GUI) psychopy (for the butterworth filter) opencv (for the filters, image processing) numpy (for the mathematical operations) matplotlib (for the image visualization) rembg (for the background removal)","title":"requirements"}]}